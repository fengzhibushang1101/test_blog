{"version":3,"sources":["../app.js"],"names":["express","require","path","favicon","logger","cookieParser","bodyParser","session","MongoStore","index","users","settings","flash","app","set","join","__dirname","use","json","urlencoded","extended","static","req","res","next","err","Error","status","locals","message","error","get","render","secret","cookieSecret","key","db","cookie","maxAge","store","host","port","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,UAAUF,QAAQ,eAAR,CAAhB;AACA,IAAMG,SAASH,QAAQ,QAAR,CAAf;AACA,IAAMI,eAAeJ,QAAQ,eAAR,CAArB;AACA,IAAMK,aAAaL,QAAQ,aAAR,CAAnB;AACA,IAAMM,UAAUN,QAAQ,iBAAR,CAAhB;AACA,IAAMO,aAAaP,QAAQ,eAAR,EAAyBM,OAAzB,CAAnB;;AAEA,IAAME,QAAQR,QAAQ,gBAAR,CAAd;AACA,IAAMS,QAAQT,QAAQ,gBAAR,CAAd;AACA,IAAMU,WAAWV,QAAQ,YAAR,CAAjB;AACA,IAAMW,QAAQX,QAAQ,eAAR,CAAd;;AAGA,IAAMY,MAAMb,SAAZ;;AAEA;AACAa,IAAIC,GAAJ,CAAQ,OAAR,EAAiBZ,KAAKa,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA;AACA;AACAD,IAAII,GAAJ,CAAQL,OAAR;AACAC,IAAII,GAAJ,CAAQb,OAAO,KAAP,CAAR;AACAS,IAAII,GAAJ,CAAQX,WAAWY,IAAX,EAAR;AACAL,IAAII,GAAJ,CAAQX,WAAWa,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAP,IAAII,GAAJ,CAAQZ,cAAR;AACAQ,IAAII,GAAJ,CAAQjB,QAAQqB,MAAR,CAAenB,KAAKa,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAH,IAAII,GAAJ,CAAQ,GAAR,EAAaR,KAAb;AACAI,IAAII,GAAJ,CAAQ,QAAR,EAAkBP,KAAlB;;AAEA;AACAG,IAAII,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAZ,IAAII,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAN,MAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIT,GAAJ,CAAQkB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIS,MAAJ,CAAW,OAAX;AACD,CARD;;AAUA;AACAnB,IAAII,GAAJ,CAAQV,QAAQ;AACZ0B,UAAQtB,SAASuB,YADL;AAEZC,OAAKxB,SAASyB,EAFF;AAGZC,UAAQ,EAACC,QAAQ,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAX,GAAc,EAAvB,EAHI;AAIZC,SAAO,IAAI/B,UAAJ,CAAgB;AACnB4B,QAAIzB,SAASyB,EADM;AAEnBI,UAAM7B,SAAS6B,IAFI;AAGnBC,UAAM9B,SAAS8B;AAHI,GAAhB;AAJK,CAAR,CAAR;AAUAC,OAAOC,OAAP,GAAiB9B,GAAjB","file":"app.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst session = require(\"express-session\");\nconst MongoStore = require(\"connect-mongo\")(session);\n\nconst index = require('./routes/index');\nconst users = require('./routes/users');\nconst settings = require('./settings');\nconst flash = require(\"connect-flash\");\n\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(flash());\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\napp.use('/users', users);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  let err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n// session\napp.use(session({\n    secret: settings.cookieSecret,\n    key: settings.db,\n    cookie: {maxAge: 1000*60*60*24*30},\n    store: new MongoStore ({\n        db: settings.db,\n        host: settings.host,\n        port: settings.port\n    })\n}));\nmodule.exports = app;\n"]}