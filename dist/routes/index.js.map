{"version":3,"sources":["../../routes/index.js"],"names":["express","require","crypto","router","Router","User","get","req","res","render","title","console","log","post","body","name","password","password_re","flash","redirect","md5","createHash","md5_pass","update","digest","new_user","email","err","user","save","session","reg","next","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["const express = require('express');\nconst crypto = require('crypto');\nconst router = express.Router();\nconst User = require(\"../models/nosql/user\");\n\n/* GET home page. */\nrouter.get('/', function(req, res) {\n  res.render('index', { title: '主页' });\n});\nrouter.get(\"/reg\", function(req, res){\n    console.log(1);\n  res.render('reg', { title: \"注册\"})\n});\nrouter.post(\"/reg\", function(req, res){\n    console.log(req.body);\n    let name = req.body.name,\n        password = req.body[\"password\"],\n        password_re = req.body['password-repeat'];\n    if(password != password_re){\n        req.flash(\"error\", \"两次输入的密码不一致\");\n        return res.redirect(\"/reg\");\n    }\n    let md5 = crypto.createHash('md5'),\n        md5_pass = md5.update(password).digest('hex');\n    let new_user = new User ({\n        \"name\": name,\n        \"password\": md5_pass,\n        \"email\": req.body.email\n    });\n    User.get(name, function(err, user){\n        if(err){\n            req.flash(\"error\", err);\n            return res.redirect(\"/\")\n        }\n        if(user){\n            req.flash(\"error\", \"用户已存在!\");\n            return res.redirect(\"/reg\");\n        }\n        console.log(\"789\");\n        new_user.save(function(err){\n            if (err) {\n                req.flash(\"error\", err);\n                return res.redirect(\"/reg\");\n            }\n            req.session.user = new_user;\n            req.flash(\"success\", \"注册成功！\");\n            res.redirect(\"/\");\n        })\n    })\n\n});\nrouter.get(\"/login\", function(reg, res, next){\n  res.render(\"login\", {\"title\": \"登陆\"})\n});\nrouter.post(\"/login\", function(req, res, next){\n});\nrouter.get(\"/post\", function(req, res, next){\n    res.render(\"post\", {\"title\": \"发表\"})\n});\nrouter.post(\"/post\", function(req,res, next){});\nrouter.get(\"/logout\", function(req, res){});\n\n\nmodule.exports = router;\n"]}